---
import { twMerge } from "tailwind-merge";
export interface Props {
  className: string[];
}

const { className } = Astro.props;

const features = [
  "404",
  "404",
  "404",
  "404",
  "404",
  "404",
  "404",
  "404",
  "404",
  "404",
  "404",
  "404",
  "404",
  "404",
  "404",
];
---

<div class="relative -z-10">
  <svg viewBox="0 0 100 100" width="100" height="100">
    <defs>
      <path
        id="circle"
        d="M 50, 50 m -37, 0 a 37,37 0 1,1 74,0 a 37,37 0 1,1 -74,0"></path>
    </defs>
    <text font-size="17">
      <textPath
        xlink:href="#circle"
        class="font-semibold"
        style="font-size: 6px;"
      >
        {features.join(" â€” ")} -
      </textPath>
    </text>
  </svg>
  <div class="outer-circle m-auto">
    <div class="outer-circle-border mt-16 w-3/4 h-3/4 m-auto">
      <slot />
    </div>
    <div class="inner-circle"></div>
  </div>
</div>

<style>
  @keyframes rotate {
    0% {
      transform: rotate(0deg);
    }
    100% {
      transform: rotate(360deg);
    }
  }

  svg {
    margin-left: -33%;
    margin-top: -24%;
    width: 164%;
    height: 147%;
    position: absolute;
    color: #fff;
    fill: currentColor;
    transform-origin: center;
    transform: rotate(45deg);
    -webkit-animation: linear infinite;
    -webkit-animation-name: rotate;
    -webkit-animation-duration: 100s;
  }

  .outer-circle {
    width: 500px;
    height: 500px;
    position: relative;
    border-radius: 50%;
    background: #0a0b12;
    border: 1px solid #345147;
  }
  .outer-circle-border {
    position: relative;
    border-radius: 50%;
    background: #78E7B0;
    border: 1px solid rgba(255, 255, 255, 0.1);
  }

  .inner-circle {
    background-image: radial-gradient(rgba(168, 251, 215, 0.3) 20%, #ffffff01);
    content: "";
    position: absolute;
    top: -94px;
    bottom: -94px;
    right: -94px;
    left: -94px;
    z-index: -2;
    border-radius: inherit;
  }
</style>
